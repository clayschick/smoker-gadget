# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version here
      - image: circleci/elixir:1.8.1
        environment:
          MIX_ENV: test
          MIX_TARGET: host

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/app/fw
    steps:
      - add_ssh_keys:
          fingerprints:
            - "8e:fd:b9:0e:d3:df:1f:97:af:51:98:d6:fd:39:2c:36"
      - checkout: # check out source code to specified path (defaults to working_directory)
          path: ~/app

      # - run: mix local.hex --force  # install Hex locally (without prompt)
      # - run: mix local.rebar --force  # fetch a copy of rebar (without prompt)

      # - restore_cache: # for the fw mix application
      #     keys:
      #       - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
      #       - v1-mix-cache-{{ .Branch }}
      #       - v1-mix-cache
      # - restore_cache:
      #     keys:
      #       - v1-build-cache-{{ .Branch }}
      #       - v1-build-cache
      # - run: mix do deps.get, compile
      # - save_cache:
      #     key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
      #     paths: "fw/deps"
      # - save_cache:
      #     key: v1-mix-cache-{{ .Branch }}
      #     paths: "fw/deps"
      # - save_cache:
      #     key: v1-mix-cache
      #     paths: "fw/deps"
      # - save_cache:
      #     key: v1-build-cache-{{ .Branch }}
      #     paths: "fw/_build"
      # - save_cache:
      #     key: v1-build-cache
      #     paths: "fw/_build"

      # specify any bash command here prefixed with `run: `
      - run: mix do deps.get, compile  # get updated dependencies & compile them
      #- run: mix ecto.create
      - run: mix test
